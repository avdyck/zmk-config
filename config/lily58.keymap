/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

&mt {
  flavor = "tap-preferred";
  tapping-term-ms = <175>;
  quick-tap-ms = <175>;
};
&lt {
  flavor = "tap-preferred";
  tapping-term-ms = <175>;
  quick-tap-ms = <175>;
};

/ {

  behaviors {
    //    0  1  2  3  4  5        6  7  8  9 10 11
    //   12 13 14 15 16 17       18 19 20 21 22 23
    //   24 25 26 27 28 29       30 31 32 33 34 35
    //   36 37 38 39 40 41 42 43 44 45 46 47 48 49
    //            50 51 52 53 54 55 56 57

    h1: homerow_gui {
      compatible = "zmk,behavior-hold-tap";
      label = "HOME_GUI";
      tapping-term-ms = <250>;
      quick-tap-ms = <250>;
      flavor = "tap-preferred";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
    };

    h2: homerow_alt {
      compatible = "zmk,behavior-hold-tap";
      label = "HOME_ALT";
      tapping-term-ms = <200>;
      quick-tap-ms = <200>;
      flavor = "tap-preferred";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
    };

    h3: homerow_alt {
      compatible = "zmk,behavior-hold-tap";
      label = "HOME_ALT";
      tapping-term-ms = <175>;
      quick-tap-ms = <175>;
      flavor = "tap-preferred";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
    };

    h4: homerow_shift {
      compatible = "zmk,behavior-hold-tap";
      label = "HOME_ALT";
      tapping-term-ms = <150>;
      quick-tap-ms = <150>;
      flavor = "tap-preferred";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
    };

    com_und: comm_unds {
      compatible = "zmk,behavior-mod-morph";
      label = "COMM_UNDS";
      #binding-cells = <0>;
      bindings = <&kp COMMA>, <&kp UNDER>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    dot_at: dot_at {
      compatible = "zmk,behavior-mod-morph";
      label = "DOT_AT";
      #binding-cells = <0>;
      bindings = <&kp DOT>, <&kp AT>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    qmt: quick_mod_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "QUICK_MOD_TAP";
      tapping-term-ms = <0>;
      retro-tap;
      flavor = "hold-preferred";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
    };

    qlt: quick_layer_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "QUICK_LAYER_TAP";
      tapping-term-ms = <0>;
      retro-tap;
      flavor = "hold-preferred";
      #binding-cells = <2>;
      bindings = <&mo>, <&kp>;
    };

  };

  combos {
    compatible = "zmk,combos";
    combo_tilde {
      timeout-ms = <50>;
      key-positions = <30 31>;
      layers = <1>;
      bindings = <&kp TILDE>;
    };
    combo_percent {
      timeout-ms = <50>;
      key-positions = <31 32>;
      layers = <1>;
      bindings = <&kp PERCENT>;
    };
    combo_hash {
      timeout-ms = <50>;
      key-positions = <37 38>;
      layers = <1>;
      bindings = <&kp HASH>;
    };
    combo_grave {
      timeout-ms = <50>;
      key-positions = <38 39>;
      layers = <1>;
      bindings = <&kp GRAVE>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &none        &kp N4      &kp N0      &kp N1      &kp N2      &kp N3                                 &kp N7       &kp N6      &kp N5      &kp N9      &kp N0         &none
        &kp DEL      &kp Q       &kp W       &kp E       &kp R       &kp T                                  &kp Y        &kp U       &kp I       &kp O       &kp P          &kp BSPC
        &kp TAB      &h1 LGUI A  &h2 LALT S  &h3 LCTL D  &h4 LSFT F  &kp G                                  &kp H        &h4 RSFT J  &h3 RCTL K  &h2 RALT L  &h1 RGUI SQT   &kp SEMI
        &kp LSFT     &kp Z       &kp X       &kp C       &kp V       &kp B         &kp PSCRN     &kp INS    &kp N        &kp M       &com_und    &dot_at     &kp FSLH       &kp RSFT
                                             &mo 4       &none       &qlt 1 ESC    &qmt LSFT TAB &lt 3 RET  &lt 2 SPACE  &none       &tog 4
      >;
    };

    sym_layer {
      bindings = <
        &trans       &trans      &trans      &trans      &trans      &trans                                 &trans       &trans      &trans      &trans      &trans         &trans
        &trans       &kp N4      &kp N0      &kp N1      &kp N2      &kp N3                                 &kp N7       &kp N6      &kp N5      &kp N9      &kp N0         &trans
        &trans       &kp LBRC    &kp LT      &kp LBKT    &kp LPAR    &kp PIPE                               &kp AMPS     &kp RPAR    &kp RBKT    &kp GT      &kp RBRC       &trans
        &trans       &kp BSLH    &kp EXCL    &kp PLUS    &kp MINUS   &kp CARET     &trans        &trans     &kp DLLR     &kp EQUAL   &kp STAR    &trans      &trans         &trans
                                             &trans      &trans      &trans        &trans        &trans     &trans       &trans      &trans
      >;
    };

    // sym_layer {
    //   bindings = <
    //     &trans       &trans      &trans      &trans      &trans      &trans                                 &trans       &trans      &trans      &trans      &trans         &trans
    //     &trans       &trans      &kp MINUS   &kp TILDE   &kp PLUS    &kp PRCNT                              &kp HASH     &kp LBKT    &kp SQT     &kp RBKT    &trans         &trans
    //     &trans       &kp EXCL    &kp LT      &kp EQUAL   &kp GT      &kp PIPE                               &kp AMPS     &kp LPAR    &kp DQT     &kp RPAR    &kp BSLH       &trans
    //     &trans       &trans      &kp FSLH    &trans      &kp STAR    &kp CARET     &trans        &trans     &kp DLLR     &kp LBRC    &kp GRV     &kp RBRC    &trans         &trans
    //                                          &trans      &trans      &trans        &trans        &trans     &trans       &trans      &trans
    //   >;
    // };

    nav_layer {
      bindings = <
        &trans       &trans      &trans      &trans      &trans      &trans                                 &trans       &trans      &trans      &trans      &trans         &trans
        &trans       &trans      &trans      &trans      &trans      &trans                                 &kp PG_UP    &kp HOME    &kp UP      &kp END     &trans         &trans
        &trans       &trans      &trans      &trans      &trans      &trans                                 &kp PG_DN    &kp LEFT    &kp DOWN    &kp RIGHT   &trans         &trans
        &trans       &trans      &trans      &trans      &trans      &trans        &trans        &trans     &trans       &trans      &trans      &trans      &trans         &trans
                                             &trans      &trans      &trans        &trans        &trans     &trans       &trans      &trans
      >;
    };

    function_layer {
      bindings = <
        &trans       &trans      &trans      &trans      &trans      &trans                                 &trans       &trans      &trans      &trans      &trans      &trans
        &trans       &trans      &trans      &trans      &trans      &trans                                 &kp F10      &kp F7      &kp F8      &kp F9      &trans      &trans
        &trans       &trans      &trans      &trans      &trans      &trans                                 &kp F11      &kp F4      &kp F5      &kp F6      &trans      &trans
        &trans       &trans      &trans      &trans      &trans      &trans        &trans        &trans     &kp F12      &kp F1      &kp F2      &kp F3      &trans      &trans
                                             &trans      &trans      &trans        &trans        &trans     &trans       &trans      &trans
      >;
    };

    media_layer {
      bindings = <
        &trans       &trans       &trans       &trans       &trans   &trans                                 &trans       &trans      &trans      &trans      &trans      &trans
        &trans       &kp C_BRI_UP &kp C_VOL_UP &kp C_BRI_DN &trans   &trans                                 &kp KP_N0    &kp KP_N7   &kp KP_N8   &kp KP_N9   &trans      &trans
        &trans       &kp C_PREV   &kp C_PP     &kp C_NEXT   &trans   &trans                                 &kp KP_N0    &kp KP_N4   &kp KP_N5   &kp KP_N6   &trans      &trans
        &trans       &trans       &kp C_VOL_DN &trans       &trans   &trans        &trans        &trans     &kp KP_N0    &kp KP_N1   &kp KP_N2   &kp KP_N3   &trans      &trans
                                               &trans       &trans   &trans        &trans        &trans     &trans       &trans      &trans
      >;
    };
  };
};
